@page "/add-phone-product"

@using AdessibindenFrontend.Services.Abstract
@using AdessibindenFrontend.Services.Dtos
@using AdessibindenFrontend.Services.Results
@using Application.Features.PhoneProducts.Dtos
@inject IPhoneProductService _phoneProductService


@if (isLoadSuccess)
{
    <EditForm Model="addPhoneProductDto" OnValidSubmit="CreatePhoneProduct" class="w-25 m-auto mt-5">
    <div class="border border-2 border-dark">
        @foreach (var brand in productFeatures.Data.Brands)
        {
        <div class="my-3 p-2">
            <div class="form-check">
                        <input id="@($"brand-{brand.Id}")" @key="@($"brand-{brand.Id}")" name="brand" type="radio" @onchange="eventArgs => {SelectBrand(brand.Id, brand.Name);}" class="form-check-input">
                        <label class="form-check-label" for="@($"brand-{brand.Id}")">@brand.Name</label>
            </div>
        </div>
        }
        <hr />
    @foreach (var model in productFeatures.Data.Models)
    {
        @if (addPhoneBrandDto.Id == model.BrandId)
        {
                
        <div class="my-3 p-2">
            <div class="form-check">
                            <input id="@($"model-{model.Id}")" @key="@($"model-{model.Id}")" name="model" type="radio" @onchange="eventArgs => {SelectModel(model.Name);}" class="form-check-input" value="@($"{(model.Name == addPhoneModelDto.Name)}")">
                        <label class="form-check-label" for="@($"model-{model.Id}")">@model.Name</label>
            </div>
        </div>
            }
    }
    </div>


        <button class="btn btn-primary w-100 py-2 btn-success" type="submit">Save</button>

    </EditForm>
}


@code {
    [CascadingParameter]
    public Action<bool> LoadingAction { get; set; }

    public bool isLoadSuccess { get; set; }

    public AddPhoneProductDto addPhoneProductDto = new();

    public AddPhoneBrandDto addPhoneBrandDto = new();
    public AddPhoneModelDto addPhoneModelDto = new();
    public IRequestResult<GetAllPhoneProductFeaturesDto> productFeatures;

    protected override async Task OnInitializedAsync()
    {
        LoadingAction(true);


        productFeatures = await _phoneProductService.GetAll();

        isLoadSuccess = productFeatures.Success;

        LoadingAction(false);

    }
    void SelectBrand(int id, string name)
    {
        addPhoneBrandDto.Id = id;
        addPhoneBrandDto.Name = name;

        ClearModel();
    }

    void SelectModel(string name)
    {
        addPhoneModelDto.Name = name;
    }
    void ClearModel()
    {
        addPhoneModelDto.Name = "";
    }
    private async Task CreatePhoneProduct()
    {

    }

}
