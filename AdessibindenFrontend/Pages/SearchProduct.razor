@page "/search"

@using AdessibindenFrontend.Core.Application.Requests
@using AdessibindenFrontend.Core.Application.Responses
@using AdessibindenFrontend.Services.Abstract
@using AdessibindenFrontend.Services.Dtos
@using AdessibindenFrontend.Services.Results
@using Microsoft.AspNetCore.Authorization

@inject IProductService _productService

@attribute [Authorize]

    <div class="row">
        <div class="col-3">
          

            <input type="text" placeholder="Search..." @bind-value="TitleToSearch"/>
            <button @onclick="SearchPhoneProduct">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
            </svg>
            </button>
            
        </div>
        <div class="col-9">
            @if (isLoadSuccess)
            {
            <h2 class="text-center fw-bold">SearchProduct</h2>
                <div class="container row">
                @foreach (var product in products.Data.Items)
                {
                    <div class="card m-3 col-3" style="width: 18rem;">
                        <img class="card-img-top" src="adesso.png" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@product.Title</h5>
                            <p class="card-text text-truncate">@product.Description</p>
                            <a href="@($"/phone-product/{@product.Id}")" class="btn btn-primary">Details</a>
                        </div>
                    </div>
                } 
                </div>
            }
        </div>
    </div>

@code {
    [CascadingParameter]
    public Action<bool> LoadingAction { get; set; }

    public bool isLoadSuccess { get; set; }

    private string TitleToSearch { get; set; }

    private IRequestResult<PaginateResponse<PaginatedProductDto>> products;

    protected override async Task OnInitializedAsync()
    {
        LoadingAction(true);

        var pageRequest = new PageRequest() { PageSize = 10, PageIndex = 0 };
        products = await _productService.GetAllPaginated(pageRequest);

        isLoadSuccess = products.Success;

        LoadingAction(false);
    }

    private async void SearchPhoneProduct()
    {
        var pageRequest = new PageRequest() { PageSize = 10, PageIndex = 0 };
        products = await _productService.GetByTitlePaginated(pageRequest, TitleToSearch);
        StateHasChanged();
    }
}
