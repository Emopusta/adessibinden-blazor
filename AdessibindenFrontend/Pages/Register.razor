@page "/register"

@using AdessibindenFrontend.Services.Abstract
@using AdessibindenFrontend.Services.Results
@using Application.Features.Auth.Commands.Register
@using Core.Application.Dtos
@inject IAuthService _authService;

<div class="container-fluid">
    <h1 class="text-center mt-5">Register</h1>

    <EditForm Model="registerDto" OnValidSubmit="RegisterUser" class="w-25 m-auto mt-5">
        <div class="form-floating">
            <InputText @bind-Value="registerDto.Email" id="email" placeholder="Email..." class="form-control mb-2" />
            <label for="floatingInput">Email address</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="registerDto.Password" type="password" placeholder="Password..." id="password" class="form-control mb-2" />
            <label for="floatingPassword">Password</label>
        </div>
        <div class="form-floating">
            <InputText @bind-Value="verifyPassword" type="password" placeholder="Password..." id="verifyPassword" class="form-control mb-2" />
            <label for="floatingPassword">Verify Password</label>
        </div>

        <button class="btn btn-primary w-100 py-2 btn-success" type="submit">Sign up</button>
        
    </EditForm>
</div>

@code {
    private string verifyPassword;

    public UserForRegisterDto registerDto = new();

    public IRequestResult<RegisteredResponse> registeredResponse;

    private async Task RegisterUser()
    {
        if (verifyPassword == registerDto.Password)
        {
            registeredResponse = await _authService.Register(registerDto);
        }
        else
        {
            throw new Exception("Passwords don't match");
        }

    }
}
